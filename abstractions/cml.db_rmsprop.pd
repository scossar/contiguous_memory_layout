#N canvas 667 213 1145 902 16;
#X text 32 461 // db^[l] = 1/m sum(dZ^[l]) \;;
#X obj 28 52 inlet bang;
#X obj 433 511 array sum;
#X obj 487 678 array set;
#X obj 433 544 /, f 8;
#X obj 28 823 outlet done;
#X obj 28 85 t b b;
#X obj 401 52 inlet m;
#X obj 268 52 inlet n;
#X obj 247 155 f;
#X obj 247 183 cml.range;
#X obj 380 244 *;
#X obj 401 85 t f f f, f 12;
#X obj 598 52 inlet s_dz;
#X obj 692 52 inlet s_db;
#X obj 822 52 inlet s_vdb;
#X obj 822 80 t b s s;
#X obj 694 678 array set, f 23;
#X obj 788 352 array get;
#X msg 822 319 1;
#X obj 247 211 t b f f f f, f 68;
#X obj 433 577 t f f, f 28;
#X text 328 183 // for n in range(num_nodes) \;;
#X text 34 524 // dZ is a 1D array of size (m * num_nodes) \; There is 1 db/Vdb value for each node \; m sets the number of values to sum \; n * m sets the element to start summing from \;;
#X obj 1011 52 inlet rho;
#X text 37 640 // RMSProp \; Sdb = beta * Sdb + (1 - beta) * db^2 \;;
#X obj 694 645 expr $f3 * $f2 + (1 - $f3) * pow($f1 \, 2);
#X connect 1 0 6 0;
#X connect 2 0 4 0;
#X connect 4 0 21 0;
#X connect 6 0 5 0;
#X connect 6 1 9 0;
#X connect 7 0 12 0;
#X connect 8 0 9 1;
#X connect 9 0 10 0;
#X connect 10 0 20 0;
#X connect 11 0 2 0;
#X connect 12 0 11 1;
#X connect 12 1 2 1;
#X connect 12 2 4 1;
#X connect 13 0 2 2;
#X connect 14 0 3 2;
#X connect 15 0 16 0;
#X connect 16 0 19 0;
#X connect 16 1 18 2;
#X connect 16 2 17 2;
#X connect 18 0 26 1;
#X connect 19 0 18 1;
#X connect 20 0 2 0;
#X connect 20 1 11 0;
#X connect 20 2 3 1;
#X connect 20 3 17 1;
#X connect 20 4 18 0;
#X connect 21 0 3 0;
#X connect 21 1 26 0;
#X connect 24 0 26 2;
#X connect 26 0 17 0;
